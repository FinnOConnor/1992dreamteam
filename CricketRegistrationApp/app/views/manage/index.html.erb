<head>
<meta charset="utf-8">
<link rel="stylesheet" href="//code.jquery.com/ui/1.11.1/themes/smoothness/jquery-ui.css">
<script src="//code.jquery.com/jquery-1.10.2.js"></script>
<script src="//code.jquery.com/ui/1.11.1/jquery-ui.js"></script>
<link rel="stylesheet" href="/resources/demos/style.css">

<script>
      
      
$(document).ready(function(){ 
    var stack = new Array();
    var stackcount = 0;
    
    var allplayers = new Array();
    var grades = new Array();   

    var i = 0;
    function init(){
        /* Create array to hold team data */

        

        /* All players */
        i=0;
        <% @players.each do |p| %> 
            var player = new Object();
            player.id = <%= p.id %>;
            player.name = "<%= [p.first_name, p.surname].join(" ") %>"; 
            player.age = <%= p.age(p.date_of_birth) %>
            allplayers[i++] = player;
        <% end %>      

        i=0;

        var j = 0;
        var k = 0;

          

        <% @grades.each do |g| %> 
            var grade = new Object();
            grade.name = "<%= g.grade_name %>";
            grade.age_range = " (<%= g.min_age %> - <%= g.max_age %>)"
            var teams = new Array();    
            <% g.teams.each do |t| %>
                var team = new Object();
                team.name = "<%= t.name %>";
                var players = new Array();   
                <% t.players.each do |p| %>
                    var player = new Object();
                    player.id = <%= p.id %>;
                    player.name = "<%= [p.first_name, p.surname].join(" ") %>"; 
                    player.age = <%= p.age(p.date_of_birth) %>
                    players[k++] = player; 
                <% end %>
                k = 0;
                team.players = players;
                team.id = "<%= t.id %>";
                teams[j++] = team;
            <% end %>
            j = 0;
            grade.teams = teams; 
            grades[i++] = grade;            
        <% end %>    
    }
          
    //i=0;
      
    function load_players(){
        $('#playerList ol').empty();
        for(var i=0; i<allplayers.length; i++){
            $('#playerList ol').append('<li class=playerDrag data-playerid="'+allplayers[i].id+'">'+" Name: " + allplayers[i].name + " Age: " +allplayers[i].age+ '</li>');    
        } 
        //Make each of the lines draggable
        $('#playerList li').draggable({
            appendTo: "body",
            helper: "clone"
        });
    }
    
    function load_team_nav(){
        $('#leftnav dl').empty();  
        for(var i=0; i<grades.length; i++){
            $('#leftnav dl').append('<dt>' + grades[i].name +" "+ grades[i].age_range +'</dt>');   
            for(var j=0; j<grades[i].teams.length; j++){
               // console.log(grades[i].teams[j].name);
                $('#leftnav dl').append('<dd data-product="'+ i + ' ' + j + '">' + grades[i].teams[j].name + '</dd>');    
            }        
        }
    }
    
    init(); 
    load_players();   
    load_team_nav();  
        
    
    function push_activity(teamid, playerid){
        stack[stackcount] = new Array();
        stack[stackcount][0] = teamid
        stack[stackcount][1] = playerid
        stackcount++
    }
        

        
    $('#doshit').click(function(){
        
        var length = stack.length;

        $.ajax({
            type: 'POST',
            url: '/manage/gogo',
            beforeSend: function(xhr) {xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'))},
//            data: ids,
            data : {stack:stack, length:length},
            dataType: 'script',
            success: function(json, status, xhr){
                window.location.reload()            
            },
            error: function (xhr, status){
                alert(status);
            }
        });
    });
        
        
        
          
    function refresh_team(index){    
        var arr = index.split(" ");
        var team = grades[arr[0]].teams[arr[1]];
        
        $('#team1 ol').empty();
        for(i=0; i< team.players.length; i++){
            $('#team1 ol').append('<li class=playerDrag data-playerid="'+team.players[i].id+'">' + team.players[i].name + '</li>');
        }
        
        //This defines the droppable team player list region
        $( "#team1 ol" ).droppable({
            accept: "#playerList li, #team2 li",
            greedy: true,
            receive: function (event, ui) { // add this handler
                ui.item.remove(); // remove original item
            },
            drop: function( event, ui ){
                //Drop checks and logic
                if (ui.draggable.hasClass("playerDrag")) {
                    if (!contains_draggable(ui.draggable.data("playerid"),1)){
                        if ( !($("#team1 li:first").hasClass("placeholder"))){
                            $( "<li class='playerDrag' data-team="+$("#team1 h2").attr('id')+" data-playerid='"+ui.draggable.data("playerid")+"'></li>" )
                                .text( ui.draggable.text() ).appendTo( this ).draggable({appendTo:"body",revert :"invalid"});   
                            push_activity($("#team1 h2").attr('id'),ui.draggable.data("playerid"));
                            delete_from_team_list(2,ui.draggable.data("playerid"));
                            
                        }
                    }
                }
            }
        });
        
        //Make each of the lines draggable
        $('#team1 li').draggable({
            //connectToSortable: "#team2 ol",
            appendTo: "body",
            revert: "invalid"
        });
    }  
        
    function refresh_team2(index){    
        var arr = index.split(" ");
        var team = grades[arr[0]].teams[arr[1]];
        
        $('#team2 ol').empty();
        for(i=0; i< team.players.length; i++){
            $('#team2 ol').append('<li class=playerDrag data-playerid="'+team.players[i].id+'">' + team.players[i].name + '</li>');
        }
        
        //This defines the droppable team player list region
        $( "#team2 ol" ).droppable({
            accept: "#playerList li, #team1 li",
            greedy: true,
            
            drop: function( event, ui ){
                //Drop checks and logic
                if (ui.draggable.hasClass("playerDrag")) {
                    if (!contains_draggable(ui.draggable.data("playerid"),2)){
                        if ( !($("#team2 li:first").hasClass("placeholder"))){
                            $( "<li class='playerDrag' data-team="+$("#team1 h2").attr('id')+" data-playerid='"+ui.draggable.data("playerid")+"'></li>" )
                                .text( ui.draggable.text() ).appendTo( this ).draggable({appendTo:"body",revert :"invalid"});   
                            push_activity($("#team2 h2").attr('id'),ui.draggable.data("playerid"));
                            delete_from_team_list(1,ui.draggable.data("playerid"));
                        }
                    }
                }
            }
        });
        //Make each of the lines draggable
        $('#team2 li').draggable({
            //connectToSortable: "#team1 ol",
            appendTo: "body",
            revert: "invalid"
        });
    }      
    
    function contains_draggable(id, team){
        var result = false;
        if(team == 1){
            $("#team1 li").each(function(index){
                if( $(this).attr("data-playerid") == id){result = true;}
            })
        }else{
            $("#team2 li").each(function(index){
                if( $(this).attr("data-playerid") == id){result = true;}
            })    
        }
            
        return result;
    }
        
    function delete_from_team_list(team, player){
        if(team == 1){
            $("#team1 li[ data-playerid="+player+"]").remove() 
            return true;
        }
        $("#team2 li[ data-playerid="+player+"]").remove()   
    }
        
    function get_team_id(index){
        var arr = index.split(" ");
        var team = grades[arr[0]].teams[arr[1]];
        
        return team.id;
    }
    
    //This defines the droppable team title region
    $( "#team1 h2" ).droppable({
        accept: "#leftnav dd",
        drop: function( event, ui ) {
            //Drop checks and logic
            if($("#team2 h2").attr("id") != get_team_id(ui.draggable.data("product"))){
                $("#team1 h2").text( ui.draggable.text().toLowerCase() );
                $("#team1 h2").attr("id", get_team_id(ui.draggable.data("product")));
                refresh_team(ui.draggable.data("product"));
            }
        }
    });  
    
    //This defines the droppable team title region
    $( "#team2 h2" ).droppable({
        accept: "#leftnav dd",
        drop: function( event, ui ) {
            //Drop checks and logic
            if($("#team1 h2").attr("id") != get_team_id(ui.draggable.data("product"))){
                $("#team2 h2").text( ui.draggable.text().toLowerCase() );
                $("#team2 h2").attr("id", get_team_id(ui.draggable.data("product")));
                refresh_team2(ui.draggable.data("product"));
            }
        }
    });
    
    //This defines the droppable area that allows players to be removed from teams
    $("#container").droppable({
        accept: "#team1 li, #team2 li",
        drop: function( event, ui ) {
            delete_from_team_list(1,ui.draggable.data("playerid"));
            delete_from_team_list(2,ui.draggable.data("playerid"));
            push_activity(-1,ui.draggable.data("playerid"));
        }
    });
    
    //This function does the drop logic checks for the team ordered lists. 
    function team_drop_check( event, ui ){
        if (ui.draggable.hasClass("playerDrag")) {
            
        }
    }
    
    
    
    //This defines the draggables for the left column of team names
    $( "#leftnav dd" ).draggable({
      appendTo: "body",
      helper: "clone"
    });      

    
          
      });
  </script>
</head>
<body>
    <div id="container">
        <div id="leftnav">
            <h3>grades</h3>
                <dl>
                    Script will put grades and teams here
                </dl>
            
        <div class="button" id="doshit"><a>Confirm Changes</a></div>

        </div>

        <div id="rightnav">
            <h3>players</h3>
            <%= search_form_for @search do |f| %>
                <%= f.label :first_name_or_surname_cont %>
                <%= f.search_field :first_name_or_surname_cont %>
                <%= f.submit %>
            <% end %>
        </div>
        
        <div class="content">
            <div class="teamsContent">
                <div class="innerTeam">
                    <div id="team1">
                        <h2>team 1</h2>
                        <div class="ui-widget-content">
                            <ol>
                                <li class="placeholder">Script will put player within the team here</li>
                            </ol>
                        </div>
                    </div> 
                    <div id="team2">
                        <h2>team 2</h2>
                        <div class="ui-widget-content">
                            <ol>
                                <li class="placeholder">Script will put player within the team here</li>
                            </ol>
                        </div>
                    </div> 
                </div>
            </div> 

            <div class="playersContent">
                <div id="playerList">
                    <h2>players</h2>
                    <div class="ui-widget-content">
                        <ol>
                            No players selected!
                        </ol>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>
