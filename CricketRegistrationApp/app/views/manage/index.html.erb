<head>
  <meta charset="utf-8">
  <title>jQuery UI Droppable - Shopping Cart Demo</title>
  <link rel="stylesheet" href="//code.jquery.com/ui/1.11.1/themes/smoothness/jquery-ui.css">
  <script src="//code.jquery.com/jquery-1.10.2.js"></script>
  <script src="//code.jquery.com/ui/1.11.1/jquery-ui.js"></script>
  <script type='text/javascript' src='jquery.facets.js'></script>
  <link rel="stylesheet" href="/resources/demos/style.css">

  <script>
      
      
$(document).ready(function(){      
    /* Create array to hold team data */
      
    var grades = new Array();
    var players = new Array();
      
    var i = 0;
    
    /* All players */
    
    <% @players.each do |p| %> 
        var player = new Object();
        player.id = <%= p.id %>;
        player.name = "<%= [p.first_name, p.surname].join(" ") %>"; 
        players[i++] = player;
    <% end %>      
        
    i=0;
    
    var j = 0;
    var k = 0;
      
    <% @grades.each do |g| %> 
        var grade = new Object();
        grade.name = <%= g.grade_name %>;
        var teams = new Array();    
        <% @g.teams each do |t| %>
            var team = new Object();
            team.name = <%= t.name %>;
            var players = new Array();   
            <% @t.players each do |p| %>
                var player = new Object();
                player.id = <%= p.id %>;
                player.name = "<%= [p.first_name, p.surname].join(" ") %>"; 
                players[k++] = player; 
            <% end %>
            k = 0;
            team.players = players;
            teams[j++] = team;
        <% end %>
        j = 0;
        grade.teams = teams; 
        grades[i++] = grade;            
    <% end %>      
      
    i=0;
      
    function load_players(){
        $('#playerList ol').empty();
        for(var i=0; i<players.length; i++){
            $('#playerList ol').append('<li>' + players[i].name + '</li>');    
        } 
    }
    
    function load_team_nav(){
        $('#leftnav dl').empty();        
        for(var i=0; i<grades.length; i++){
            console.log("hi");
            $('#leftnav dl').append('<dt>' + grades[i].name + '</dt>');   
            for(var j=0; i<grades[i].teams.length; j++){
                $('#leftnav dt').append('<dd>' + grades[i].teams[j].name + '</dd>');    
            }        
        }        
    }
    
    load_players();   
    load_team_nav();   
    
        
        
      $(function() {
          var globalvar = 0;
          
    function refreshTeam1(id){
        var teamid = globalvar;
        $("#team1 ol").empty();
        
        for(i=0;i<teamid;i++){
                $( "<li class='playerLine'></li>" ).text(<%=  %>).appendTo( "#team1 ol" );
        }
        
        <% Team.find(params[:id]) do |team| %>
            <% if(@team.present?) %>
            <% @team.players.each do |player| %>
                $( "<li class='playerLine'></li>" ).text( <%= [player.first_name, player.surname].join(" ") %>  ).appendTo( this ).draggable({appendTo:"body",revert: "invalid"}); 
        <% end %>
        <% end %>
            <% end %>   
    }
          
    function refreshTeam2(teamid){
        $("#team2 ol").empty();
    }  
    
    function refreshPlayers(){
        
    }      
          
    $( "#leftnav dd" ).draggable({
      appendTo: "body",
      helper: "clone"
    });      

    $( "#playerList li" ).draggable({
      appendTo: "body",
      helper: "clone"
    });

    $( "#team1 h2" ).droppable({
        accept: "#leftnav dd",
        drop: function( event, ui ) {
            if($("#team2 h2").text() != ui.draggable.text()){
                $("#team1 h2").text( ui.draggable.text() );
                globalvar = ui.draggable.data('product');
                refreshTeam1(ui.draggable.data('product'));
            }
        }
    });

    $( "#team2 h2" ).droppable({
        accept: "#leftnav dd",
        drop: function( event, ui ) {
            if($("#team1 h2").text() != ui.draggable.text()){
                $("#team2 h2").text( ui.draggable.text() );
                globalvar = ui.draggable.data('product');
                refreshteam2(ui.draggable.data('product'));
            }
        }
    });      

    // TEAM 1 HERE
    $( "#team1 li" ).draggable({
      appendTo: "body",
      revert: "invalid"
    });


    $( "#team1 ol" ).droppable({

      greedy: true,
      activeClass: "ui-state-default",
      hoverClass: "ui-state-hover",
      accept: "#playerList li",
      accept: "#team2 li",
      accept: ":not(.ui-sortable-helper)",
      drop: function( event, ui ) {
          $( "<li class 'playerLine'></li>" ).text( ui.draggable.text() ).appendTo( this ).draggable({appendTo:"body",revert: "invalid"});
      }
    }).sortable({
      items: "li:not(.placeholder)",
      sort: function() {
        // gets added unintentionally by droppable interacting with sortable
        // using connectWithSortable fixes this, but doesn't allow you to customize active/hoverClass options
        $( this ).removeClass( "ui-state-default" );
      }
    });

    // TEAM 2 HERE      

    $( "#team2 li" ).draggable({
      appendTo: "body",
      revert: "invalid"
    });


    $( "#team2 ol" ).droppable({

      greedy: true,
      activeClass: "ui-state-default",
      hoverClass: "ui-state-hover",
      accept: "#playerList li",
      accept: "#team1 li",
      accept: ":not(.ui-sortable-helper)",
      drop: function( event, ui ) {
          if($(this).children("#team2 ol playerLine").size() > 0) {
              for(i = 0; i < $(this).children(".playerLine").size(); i++){
                  if($(this).children(".playerLine").text() ==  $(ui.draggable.text())){
                        alert("cancel");    //Instead want to cancel dragging of item
                        return false;
                  }
              }
          }
          $( "<li class='playerLine'></li>" ).text( ui.draggable.text() ).appendTo( this ).draggable({appendTo:"body",revert: "invalid"});    
        }
    }).sortable({
      items: "li:not(.placeholder)",
      sort: function() {
        // gets added unintentionally by droppable interacting with sortable
        // using connectWithSortable fixes this, but doesn't allow you to customize active/hoverClass options
        $( this ).removeClass( "ui-state-default" );
      }
    });

    
          

  });
          
          
      });
  </script>
</head>

<body>
<div id="container">
    <div id="leftnav">
        <h3>grades</h3>
        <dl>
            <% @grades.each do |grade| %>
                <dt><%= grade.grade_name %></dt>
                    <% grade.teams.each do |team| %>
                        <dd data-product="<%= team.id %>"><%= team.name %></dd>
                    <% end %>
            <% end %>
        </dl>
    </div>
    <div id="rightnav">
        <h3>players</h3>

        <%= search_form_for @search1 do |f| %>

  <%= f.label :first_name_or_surname_cont %>
  <%= f.search_field :first_name_or_surname_cont %>

  <%= f.submit %>
<% end %>
    </div>
        <div class="content">
            <div class="teamsContent">
                <div class="innerTeam">
                    <div id="team1">
      <h2>team 1</h2>
      <div class="ui-widget-content">
        <ol>
          <% @teams.first.players.each do |player| %>
                <li class="playerLine"><%= [player.first_name, player.surname].join(" ") %> </li>
          <% end %>
        </ol>
      </div>
    </div> 

                </div>


            </div> 

        <div class="playersContent">
            <div id="playerList">
                <h2>players</h2>
                <div class="ui-widget-content">
                <ol>
                    No players selected!
                </ol>
            </div>
        </div>
    </div>




    </div>
</div>
</body>
