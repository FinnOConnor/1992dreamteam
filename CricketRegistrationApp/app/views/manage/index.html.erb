<head>
<meta charset="utf-8">
<script src="//code.jquery.com/jquery-1.10.2.js"></script>
<script src="//code.jquery.com/ui/1.11.1/jquery-ui.js"></script>

<script>
      
/**
    Have to put the javascript in the head of this file for some reason. 
    We weren't able to get the assets/javascripts/ files working properly
**/
      
$(document).ready(function(){ 
    
    /* Global variables */
    
    var stack = new Array();
    var stackcount = 0;
    var allplayers = new Array();
    var grades = new Array();   
    var i = 0;
    var age_1_checked = true;
    var age_2_checked = true;
    var age_3_checked = true;
    var myTimeout;    
    var mouseX;
    var mouseY;
    
    
    /* Initialise checkbox buttons for the filtering */
        
        
    $("#age").buttonset();    
    $('#age :checkbox').prop('checked', true);      
        
    $('#filter').click(function(){
        
        /* Age checkbox */
        if($('#check1').prop("checked")) age_1_checked = true;
        else age_1_checked = false;
        if($('#check2').prop("checked")) age_2_checked = true;
        else age_2_checked = false;
        if($('#check3').prop("checked")) age_3_checked = true;
        else age_3_checked = false;
      
        load_players();
        
    });          
    
    
    /* Creates player arrays from the database */
    
    function init(){
        /* All players */
        i=0;
        <% @players.each do |p| %> 
            var player = new Object();
                player.id = <%= p.id %>;
                player.name = "<%= [p.surname, p.first_name].join(", ") %>"; 
                player.age = <%= p.age() %>
                player.email = "<%= p.email %>"
                player.phone = <%= p.contact_phone %>
            allplayers[i++] = player;
        <% end %>      
            
        i=0;

        var j = 0;
        var k = 0;

        <% @grades.each do |g| %> 
            var grade = new Object();
            grade.name = "<%= g.grade_name %>";
            grade.min_age = <%= g.min_age %>;
            grade.max_age = <%= g.max_age %>;
            grade.age_range = " ("+grade.min_age+" - "+grade.max_age+")"
            var teams = new Array();    
            <% g.teams.each do |t| %>
                var team = new Object();
                team.name = "<%= t.name %>";
                var players = new Array();   
                <% t.players.each do |p| %>
                    var player = new Object();
                    player.id = <%= p.id %>;
                    player.name = "<%= [p.surname, p.first_name].join(", ") %>"; 
                    player.age = <%= p.age() %>
                    players[k++] = player; 
                <% end %>
                k = 0;
                team.players = players;
                team.id = "<%= t.id %>";
                teams[j++] = team;
            <% end %>
            j = 0;
            grade.teams = teams; 
            grades[i++] = grade;            
        <% end %>    
    }
          
      
    /* Loads players into the player list */
    
    function load_players(){
                
        /* Sorts the player list alphabetically */
        allplayers.sort(function(a, b) {
           var aName = a.name;
           var bName = b.name;
           return (aName == bName) ? 0 : (aName > bName) ? 1 : -1;
        });        
        
        /* Age filter, you can add more filters here if you want */
        $('#playerList ol').empty();
        for(var i=0; i<allplayers.length; i++){
            /* Check for filter */
            if(age_1_checked){
                if(allplayers[i].age > 3 && allplayers[i].age <9)
                    $('#playerList ol').append('<li class=playerDrag data-playerid="'+allplayers[i].id+'">'+ allplayers[i].name +'</li>');    
            }
            if(age_2_checked){
                if(allplayers[i].age > 8 && allplayers[i].age <15)
                    $('#playerList ol').append('<li class=playerDrag data-playerid="'+allplayers[i].id+'">'+ allplayers[i].name +'</li>');    
            }       
            if(age_3_checked){
                if(allplayers[i].age > 14)
                    $('#playerList ol').append('<li class=playerDrag data-playerid="'+allplayers[i].id+'">'+ allplayers[i].name +'</li>');    
            }                             
                
        } 
        //Make each of the lines draggable
        $('#playerList li').draggable({
            appendTo: "body",
            helper: "clone"
        });
    }
        
        
    /* Loads the teams and grades into the left navigation bar */    
    
    function load_team_nav(){
        $('#leftnav dl').empty();  
        for(var i=0; i<grades.length; i++){
            $('#leftnav dl').append('<dt>' + grades[i].name +'</dt>');   
            for(var j=0; j<grades[i].teams.length; j++){
               // console.log(grades[i].teams[j].name);
                $('#leftnav dl').append('<dd data-product="'+ i + ' ' + j + '">' + grades[i].teams[j].name + '</dd>');    
            }        
        }
    }
        
    /* Initialise page originally */
    
    init(); 
    load_players();   
    load_team_nav();  
        
    
    /* Pushes an action onto the action stack */    
        
    function push_activity(teamid, playerid){
        stack[stackcount] = new Array();
        stack[stackcount][0] = teamid
        stack[stackcount][1] = playerid
        stackcount++
    }
        

    /* When the button to confirm changes has been clicked */
        
    $('#confirm').click(function(){
        
        var length = stack.length;

        /* Sends an ajax request to the manage controller */
        $.ajax({
            type: 'POST',
            url: '/manage/gogo',
            beforeSend: function(xhr) {xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'))},
            data : {stack:stack, length:length},
            dataType: 'script',
            success: function(json, status, xhr){
                window.location.reload()            
            },
            error: function (xhr, status){
                alert(status);
            }
        });
    });
        
        
    $('#refresh').click(function(){
            location.reload(true);
 
        
    });
        
        
    /* Get mouse coordinates when mouse is moved */

    $(document).mousemove( function(e) {
        mouseX = e.pageX; 
        mouseY = e.pageY;
    });   
        
             
    /* Mouse over a player */
        
    $(document).on("mouseenter", ".ui-widget-content ol li", function(){
        if($(this).hasClass("ui-draggable-dragging")) {$('.details').hide(); return;}

        var player = $(this);
        
        myTimeout = setTimeout(function() {
            show_player_details(player.data("playerid"));
        
        }, 500);
    });
        
    
    /* Mouse out from a player */
        
    $(document).on("mouseleave", ".ui-widget-content ol li", function(){
        clearTimeout(myTimeout);
        $('.details').hide();
    });        

    
    /* Show the tooltip */
        
    function show_player_details(playerid){
        var player;
        for(var i =0; i<allplayers.length; i++){
            if(allplayers[i].id==playerid){
                player = allplayers[i];
            }
        }        
        $('.details').show();        
        $('.details').css({left: mouseX+1, top: mouseY+1});
        $('.details').html("<ul><li>Name: " + player.name + "</li><li>Age: " + player.age + "</li><li>Email: " + player.email + "</li><li>Ph: " + player.phone + "</li></ul>");
    }
        
        

        
    
    /* Refresh Team 1 (Any time a change is made) */    
          
    function refresh_team(index){    
        var arr = index.split(" ");
        var team = grades[arr[0]].teams[arr[1]];
        
        $('#team1 ol').empty();
        for(i=0; i< team.players.length; i++){
            $('#team1 ol').append('<li class=playerDrag data-playerid="'+team.players[i].id+'">' + team.players[i].name + '</li>');
        }
        
        //This defines the droppable team player list region
        $( "#team1 ol" ).droppable({
            accept: "#playerList li, #team2 li",
            greedy: true,
            tolerance: "touch", 
            hoverClass: "hover",
            receive: function (event, ui) { // add this handler
                ui.item.remove(); // remove original item
            },
            drop: function( event, ui ){
                //Drop checks and logic
                if (ui.draggable.hasClass("playerDrag")) {
                    if (!contains_draggable(ui.draggable.data("playerid"),1)){
                        if ( !($("#team1 li:first").hasClass("placeholder"))){
                            $( "<li class='playerDrag' data-team="+$("#team1 h2").attr('id')+" data-playerid='"+ui.draggable.data("playerid")+"'></li>" )
                                .text( ui.draggable.text() ).appendTo( this ).draggable({appendTo:"body",revert :"invalid"});   
                            push_activity($("#team1 h2").attr('id'),ui.draggable.data("playerid"));
                            delete_from_team_list(2,ui.draggable.data("playerid"));
                        }
                    }
                }
            }
        });
        
        //Make each of the lines draggable
        $('#team1 li').draggable({
            appendTo: "body",
            revert: "invalid"
        });
    }  

        
        
    /* Refresh Team 1 (Any time a change is made) */      
        
    function refresh_team2(index){    
        var arr = index.split(" ");
        var team = grades[arr[0]].teams[arr[1]];
        
        $('#team2 ol').empty();
        for(i=0; i< team.players.length; i++){
            $('#team2 ol').append('<li class=playerDrag data-playerid="'+team.players[i].id+'">' + team.players[i].name + '</li>');
        }
        
        //This defines the droppable team player list region
        $( "#team2 ol" ).droppable({
            accept: "#playerList li, #team1 li",
            greedy: true,
            tolerance: "touch", 
            hoverClass: "hover",
            drop: function( event, ui ){
                //Drop checks and logic
                if (ui.draggable.hasClass("playerDrag")) {
                    if (!contains_draggable(ui.draggable.data("playerid"),2)){
                        if ( !($("#team2 li:first").hasClass("placeholder"))){
                            $( "<li class='playerDrag' data-team="+$("#team1 h2").attr('id')+" data-playerid='"+ui.draggable.data("playerid")+"'></li>" )
                                .text( ui.draggable.text() ).appendTo( this ).draggable({appendTo:"body",revert :"invalid"});   
                            push_activity($("#team2 h2").attr('id'),ui.draggable.data("playerid"));
                            delete_from_team_list(1,ui.draggable.data("playerid"));
                        }
                    }
                }
            }
        });
        //Make each of the lines draggable
        $('#team2 li').draggable({
            //connectToSortable: "#team1 ol",
            appendTo: "body",
            revert: "invalid"
        });
    }      
    

    
    /* Checks for duplicates */
        
    function validate_player_entry(teamindex, playerid){
        for(var i=0;i<allplayers.length;i++){
            var player = allplayers[i];
            
        }
    }

        
    function contains_draggable(id, team){
        var result = false;
        if(team == 1){
            $("#team1 li").each(function(index){
                if( $(this).attr("data-playerid") == id){result = true;}
            })
        }else{
            $("#team2 li").each(function(index){
                if( $(this).attr("data-playerid") == id){result = true;}
            })    
        }
            
        return result;
    }
    
        
        
    /* Removes player from team list */    
        
    function delete_from_team_list(team, player){        
        if(team == 1){
            $("#team1 li[ data-playerid="+player+"]").remove() 
            return true;
        }
        $("#team2 li[ data-playerid="+player+"]").remove()   
    }
        
    function get_team_id(index){
        var arr = index.split(" ");
        var team = grades[arr[0]].teams[arr[1]];
        
        return team.id;
    }
    

        
    /* Defines the droppable team 1 title region */
        
    $( "#team1 h2" ).droppable({
        accept: "#leftnav dd",
        drop: function( event, ui ) {
            //Drop checks and logic
            if($("#team2 h2").attr("id") != get_team_id(ui.draggable.data("product"))){
                $("#team1 h2").text( ui.draggable.text().toLowerCase() );
                $("#team1 h2").attr("id", get_team_id(ui.draggable.data("product")));
                refresh_team(ui.draggable.data("product"));
            }
        }
    });  
    
        
    /* Defines the droppable team 2 title region */
        
    $( "#team2 h2" ).droppable({
        accept: "#leftnav dd",
        drop: function( event, ui ) {
            //Drop checks and logic
            if($("#team1 h2").attr("id") != get_team_id(ui.draggable.data("product"))){
                $("#team2 h2").text( ui.draggable.text().toLowerCase() );
                $("#team2 h2").attr("id", get_team_id(ui.draggable.data("product")));
                $("#team2 h2").attr("data-teamindex",ui.draggable.data("product"));
                refresh_team2(ui.draggable.data("product"));
            }
        }
    });
    

    /* Defines the droppable area that allows players to be removed from teams */
        
    $("#container").droppable({
        accept: "#team1 li, #team2 li",
        drop: function( event, ui ) {
            delete_from_team_list(1,ui.draggable.data("playerid"));
            delete_from_team_list(2,ui.draggable.data("playerid"));
            push_activity(-1,ui.draggable.data("playerid"));
        }
    });
    

    
    /* Does the drop logic checks for the team ordered lists */
        
    function team_drop_check( event, ui ){
        if (ui.draggable.hasClass("playerDrag")) {
            
        }
    }
    

    
    /* Defines the draggables for the left column of team names */
        
    $( "#leftnav dd" ).draggable({
      appendTo: "body",
      helper: "clone"
    });      
          
});
</script>
    
    
</head>
<body>
    
    <div id="container">
        <div id="leftnav">
            <div id="grades">
            <h3>grades</h3>
                <dl>
                    Script will put grades and teams here
                </dl>
            </div>

        </div>

        <div id="rightnav">
            
            <!-- This could be extended with more filters, age is just one -->
            
            <h3>filter</h3>
            <div id="age">
                <dl>
                    <dt>Player Age</dt>
                        <dd><input type="checkbox" id="check1"><label for="check1">4-8</label></dd>
                        <dd><input type="checkbox" id="check2"><label for="check2">9-14</label></dd>
                        <dd><input type="checkbox" id="check3"><label for="check3">14+</label></dd>
                </dl>    
            </div>
            <br>
            <div class="button" id="filter"><a>Filter</a></div>

        </div>
        
        <div class="content">
            <div class="teamsContent">
                <div class="innerTeam">
                    <div id="team1" class="team_container">
                        <h2>team 1</h2>
                        <div class="ui-widget-content">
                            <ol>
                                <li class="placeholder">Script will put player within the team here</li>
                            </ol>
                        </div>
                    </div> 
                    <div id="team2" class="team_container">
                        <h2>team 2</h2>
                        <div class="ui-widget-content">
                            <ol>
                                <li class="placeholder">Script will put player within the team here</li>
                            </ol>
                        </div>
                    </div> 
                </div>
                
        
            </div> 
            
                <div class="button" id="confirm"><a>Confirm Changes</a></div>
                <div class="button" id="refresh"><a>Refresh</a></div>

            <div class="playersContent" >
                <div id="playerList"class="player_container">
                    <h2>players</h2>
                    <div class="ui-widget-content">
                        <ol>
                            No players selected!
                        </ol>
                    </div>
                </div>
            </div>
            
            <div class="details"></div>
        
  
        </div>
    </div>
</body>
